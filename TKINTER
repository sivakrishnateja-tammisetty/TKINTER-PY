

                                            BASICS OF TKINTER




*online compiler to run tkinter: repl.it
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  *TKINTER: TKINTER helps us to create GUI applications.
  *GUI means graphical user interface.
  *Tkinter is a built-in Python library for creating graphical user interfaces (GUIs). The name "Tkinter" is a portmanteau of "Tk" and "interface," where "Tk" refers to the Tk GUI toolkit, which Tkinter is based on.
  *Tkinter provides a set of tools and widgets for creating windows, dialog boxes, buttons, text fields, labels, and other GUI elements that allow users to interact with Python applications in a more visually appealing and user-friendly way.


  *INSTALL:  
            To install the tkinter module in Python, you can typically use the command pip install python-tk or  if it's not already included with your Python distribution.

  STEPS:
  step 1: import tkinter module.
  step 2: GUI interaction.
  step 3: adding inputs
  step 4: main loop


*HELLO WORLD USING TKINTER:
 -------------------------

*In Tkinter, a Label is a widget used to display text or images in a graphical user interface (GUI). 
*Labels are typically used to provide information, captions, or instructions to the user. 


Eg1:
from tkinter import *
window=Tk()                                    # window as object name & Tk is class.                             
INPUT=Label(window,text="Hello World!")
INPUT.pack()
window.mainloop()                              #if we didnt write mainloop(), it will not display ouput and error as well.



 *NOTE: Here ,default dimenssions is vey small, title as  tk and background color as white


-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


*BASIC MODIFICATIONS USING TKINTER:
 ----------------------------------




Eg:
from tkinter import *
window=Tk()
window.title("TASK")
window.geometry("700x700")
window.config(bg="red")
mainloop()



Note:
Here i changed title as "TASK" & diensions as 700x700  lengthxheight & background color as red





-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


*FRAMES AND BUTTONS USING TKINTER:
 ---------------------------------



Eg1:
from tkinter import *
window=Tk()
window.title("TASK")
window.geometry("500x700")
window.config(bg="red")
frame1= Frame(window,bg="yellow", width=50,height=50,cursor="dot")
frame2= Frame(window,bg="green",width=50,height=50,cursor="dotbox")
frame1.pack(side= TOP)
frame2.pack(side= BOTTOM)

mainloop()


Note : In above Eg1,i creted frames  with background color and dimensions and cursors. Inside pack() we specify where that frames should be present.








Eg2:
from tkinter import *
window=Tk()
window.title("TASK")
window.geometry("500x700")
window.config(bg="red")
frame1= Frame(window,width=50,height=50,cursor="dot")
frame2= Frame(window,width=50,height=50,cursor="dotbox")
button1=Button(frame1,text="Button1",bg="blue")
button2=Button(frame2,text="Button2",bg="pink")
button3=Button(frame1,text="Button2",fg="orange")
frame1.pack(side= TOP)
frame2.pack(side= BOTTOM)
button1.pack()
button2.pack()
button3.pack()
mainloop()


Note:In above eample2,i created buttons and bg colors and fg colors.



------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


*ENTRY BOX AND GRID LAYOUT:
 --------------------------

*GRID :Grid takes 2 parameters(rows & columns).


Eg1:
from tkinter import *
window=Tk()
window.title("TASK")
window.geometry("250x50")
label1=Label(window,text="Mail")
label2=Label(window,text="Password")
e1=Entry(window,width=40,borderwidth=5)
e2=Entry(window,width=40,borderwidth=5)
#label1.pack() #title was prsnt at middel top
label1.grid(row=0,column=1)
label2.grid(row=1,column=1)
e1.grid(row=0,column=2)
e2.grid(row=1,column=2)
mainloop()



Note: 
 *Here, i created lables and entry box.
 *Pak() -->title was prsnt at middle top.
 * grid() --> title was prsnt at specified row & column.


-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

*PACK:
 -----
*We can specify labels only on TOP,LEFT,RIGHT,BOTTOM.
*But using grid layout ,we can use lables where ever we want.
*expand : It contains 2 values(True/False).

Eg:
from tkinter import *
window=Tk()
window.title("TASK")
window.geometry("250x50")
label1=Label(window,text="Label-1",bg="red",fg="white")
label2=Label(window,text="Label-2",bg="blue",fg="white")
label3=Label(window,text="Label-2",bg="green",fg="white")
label1.pack(side=TOP,fill=X,expand=False)
label2.pack(side=LEFT,fill=Y,expand=True)
label3.pack(side=RIGHT,fill=Y,expand=False)
mainloop()

NOTE: Here, i add lables and label positions using pack()



--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


*HANDLING BUTTONS:
 ----------------



Eg:
from tkinter import *
window=Tk()
window.title("TASK")
window.geometry("250x50")
def log_entry():
  print("Logged in")
button=Button(window,text="LOGIN",command=log_entry,width=12,bg="red",fg="white",font=("bold",12),activebackground="black",activeforeground="white")
button.pack()

mainloop()




Note:Here, i worked on button like ,whenever i cliked on button it will provide message and bg color, fg color, font size width, activebackground and activeforeground.




---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


*MENUBAR:
 --------

*tearoff=0
*tearoff=1 (floating menu)
*add_separator() : add line in file submenu after Save as .
* add_cascade() :It will act as parent menu. 
*Here i add functionality ,whenever i clicked on Exit,i want to close file menu window closed.





Eg:
window=Tk()
window.title("TASK")
window.geometry("250x50")
menu=Menu(window)
file=Menu(menu,tearoff=0)
file.add_command(label="New")
file.add_command(label="Open")
file.add_command(label="Save")
file.add_command(label="Save as")
file.add_separator()
file.add_command(label="Exit",command=window.quit)
menu.add_cascade(label="File",menu=file)
window.config(menu=menu)

mainloop()



----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


*MESSAGE BOX:
 ----------
* If we want message box,we want to import message box from tkinter(import tkinter.messagebox)


 * Using showinfo(title,"msg") method :
       It will show 'i' symbol
  Eg:

 from tkinter import *
 import tkinter.messagebox
 window=Tk()
 tkinter.messagebox.showinfo("Info","Running out of time")

 mainloop()




*Using showwarning(title,msg) method:
   It will show warning symbol


 Eg:
 from tkinter import *
 import tkinter.messagebox
 window=Tk()
 tkinter.messagebox.showwarning("Info","Running out of time")

 mainloop()







*using showerror(title,msg) method:
   It will show error symbol

 Eg:
 from tkinter import *
 import tkinter.messagebox
 window=Tk()
 tkinter.messagebox.showerror("Info","Running out of time")

 mainloop()





 Eg2: using askyesno

from tkinter import *
import tkinter.messagebox
window=Tk()
tkinter.messagebox.showerror("Info","Running out of time")
question=tkinter.messagebox.askyesno("Weather","Will it rain?")
if question == True:
  print("Take an umberalla")
else:
  print("Yes")

mainloop() 



Eg3: using askokcancel

from tkinter import *
import tkinter.messagebox
window=Tk()
tkinter.messagebox.showerror("Info","Running out of time")
question=tkinter.messagebox.askokcancel("Weather","Will it rain?")
if question == True:
  print("Take an umberalla")
else:
  print("Yes")

mainloop()




-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

* DRAWING:
  --------

* For drawing,we need to use Canvas class.This class is present in tkinter module.
*dash(3,3) : it means that the line will be drawn with 3 pixels of solid line followed by 3 pixels of a gap, and this pattern will  repeat.




Eg: creating lines

from tkinter import *
window=Tk()
c=Canvas(window,width=500,height=500)
c.pack()
c.create_line(0,0,500,500,width=5,fill="green",dash=(3,3))
c.create_line(0,500,500,0,width=5,fill="red",dash=(3,3))
mainloop()


Eg: creating lines and rectangle

from tkinter import *
window=Tk()
c=Canvas(window,width=500,height=500)
c.pack()
c.create_line(0,0,500,500,width=5,fill="green",dash=(3,3))
c.create_line(0,500,500,0,width=5,fill="red",dash=(3,3))
c.create_rectangle(150,125,450,375,fill="yellow",outline="blue",width=5)
mainloop()



-----------------------------------------------------------------------------------------------------------------------------------------------------

*MESSAGE BOX 2:
----------------
*Message is a class.

Eg:method1

from  tkinter import *
window=Tk()
window.geometry('500x500')
message=Message(window,text="python")
message.pack()
mainloop()




Eg:method 2

*relief is used to create 2D effect.
*padx and pady are for alignment of text.

from  tkinter import *
window=Tk()
var=StringVar()
message=Message(window,textvariable=var,relief=RAISED,padx=20,pady=20)
var.set("Python")
message.pack()
mainloop()



Eg3: message box and entry box

from  tkinter import *
window=Tk()
var=StringVar()
entry_var=StringVar()
def insert():
  result=entry_var.get()
  var.set(result)
message=Message(window,textvariable=var,relief=RAISED,padx=50,pady=50)
entry=Entry(window,textvariable=entry_var)
button=Button(window,text="OK",command=insert)
message.pack()
entry.pack()
button.pack()
mainloop()


o/p:when i typed message in entry box and clicked ok button ,the message was displayed on message box.


--------------------------------------------------------------------------------------------------------------------------------------------------------

*CHECK BOX:  ==>using tkinter
 ----------

Eg:
from  tkinter import *
window=Tk()
window.geometry('500x500')
check_box_1=IntVar()
check_box_2=IntVar()
check_box_3=IntVar()
check_btn_1=Checkbutton(window,text="siva",onvalue=1,offvalue=0,height=2,width=10)
check_btn_2=Checkbutton(window,text="krishna",onvalue=1,offvalue=0,height=2,width=10)
check_btn_3=Checkbutton(window,text="Teja",onvalue=1,offvalue=0,height=2,width=10)
check_btn_1.pack()
check_btn_2.pack()
check_btn_3.pack()
mainloop()


----------------------------------------------------------------------------------------------------------------------------------------------


* PLACE:
  ------
*place takes two arguments x axsis and y axsis
*place is similar to pack.



Eg:
from  tkinter import *
window=Tk()
window.geometry('500x500')
btn=Button(window,text="Button",height=2,width=10)
btn.place(x=200,y=200)
mainloop()





